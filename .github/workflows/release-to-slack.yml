name: Notify Slack on release

on:
  release:
    types: [published]

jobs:
  slack_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Format and send Slack message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO: ${{ github.repository }}
          TAG: ${{ github.event.release.tag_name }}
          TITLE: ${{ github.event.release.name }}
          URL: ${{ github.event.release.html_url }}
          RAW_BODY: ${{ github.event.release.body }}
        run: |
          # Cancel automated sending if contains hotfix
          if echo "$TITLE" | grep -iq "hotfix" || echo "$RAW_BODY" | grep -iq "hotfix"; then
            echo "Mot-clé 'hotfix' détecté, annulation de l'envoi Slack."
            exit 0
          fi
          # Transform markdown to Slack format
          CLEANED_BODY=$(echo "$RAW_BODY" \
            | sed -E 's/^### (.*)$/*\1*/' \
            | sed -E 's/^## (.*)$/*\1*/' \
            | sed -E 's/^# (.*)$/*\1*/' \
            | sed -E 's/^- (.*)$/• \1/' \
            | sed -E 's/\r//' \
          )

          SLACK_MESSAGE="🚀 *New release!*

          ➡️ $TITLE
          🔗 $URL
          
          $CLEANED_BODY"

          # Generate the JSON
          echo '{}' | jq --arg text "$SLACK_MESSAGE" '.text = $text' > payload.json

          cat payload.json
          curl -X POST -H 'Content-type: application/json' \
            --data @payload.json \
            "$SLACK_WEBHOOK_URL"
